@page
@model MegaDesk_ASP.NET_Core.Pages.DeskQuotes.CreateModel

@{
    ViewData["Title"] = "Create";
}

<div class="create-page-centered">
    <h1>Create Desk Quote</h1>
    <hr />
    <div class="d-flex justify-content-center">
       
        <div class="container">
            
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="DeskQuote.Name" class="control-label"></label>
                    <input asp-for="DeskQuote.Name" class="form-control" />
                    <span asp-validation-for="DeskQuote.Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeskQuote.orderedDate" class="control-label"></label>
                    <input asp-for="DeskQuote.orderedDate" class="form-control" />
                    <span asp-validation-for="DeskQuote.orderedDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeskQuote.Width" class="control-label"></label>
                    <input asp-for="DeskQuote.Width" class="form-control" />
                    <span asp-validation-for="DeskQuote.Width" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeskQuote.Depth" class="control-label"></label>
                    <input asp-for="DeskQuote.Depth" class="form-control" />
                    <span asp-validation-for="DeskQuote.Depth" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeskQuote.NumberOfDrawers" class="control-label"></label>
                    <input asp-for="DeskQuote.NumberOfDrawers" class="form-control" />
                    <span asp-validation-for="DeskQuote.NumberOfDrawers" class="text-danger"></span>
                </div><div class="form-group">
                    <label asp-for="DeskQuote.SurfaceMaterial" class="control-label"></label>
                    <select asp-for="DeskQuote.SurfaceMaterial" asp-items="@(new SelectList(Model.DeskQuote.AllowedMaterials))" class="form-control" id="materialSelect"></select>
                    <span asp-validation-for="DeskQuote.SurfaceMaterial" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DeskQuote.RushDays" class="control-label"></label>
                    <select asp-for="DeskQuote.RushDays" asp-items="@(new SelectList(Model.DeskQuote.AllowedRushDays))" class="form-control"></select>
                    <span asp-validation-for="DeskQuote.RushDays" class="text-danger"></span>
                </div>
                <div class="form-group text-center">
                    <input type="submit" value="Create" class="btn btn-secondary" />
                    <a asp-page="./Index" class="btn btn-secondary">Back to List</a>
                </div>
            </form>
        </div>
        <div style="margin: 5rem 0; padding: 2rem;">
            <img style="border-radius: 15px" id="materialImage" src="" alt="Material Image" style="display: none; width: 100%" />
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('materialSelect').addEventListener('change', async function () {
            var selectedMaterial = this.value;
            var materialImage = document.getElementById('materialImage');
            var imageUrl = "/images/" + selectedMaterial + ".webp";

            // Check if the image file exists
            try {
                let response = await fetch(imageUrl, { method: 'HEAD' });
                if (response.ok) {
                    // If the image file exists, update the src attribute and display the image
                    materialImage.src = imageUrl;
                    materialImage.style.display = "block";
                } else {
                    console.log('Image not found');
                    materialImage.style.display = "none";
                }
            } catch (error) {
                console.log('Error: ', error);
            }
        });
    </script>
}
